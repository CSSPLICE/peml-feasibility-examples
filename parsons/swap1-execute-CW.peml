# Simple swap function assessed by execution.
# This is a Java exercise.
# No indentation is required.
# Illustrates fixed code shown to students
# Illustrates a multi-line block
# Illustrates a simple distractor. Note that it is not marked in any
# mandatory way (a comment is provided to identify it, but this does
# not affect the exercise). Actually, the distractor block is
# indistinguishable from another block, but it doesn't matter which
# one is actually used.

# This version is a standard Code Workout coding exercise for
# testing purposes.

exercise_id: https://github.com/CSSPLICE/peml-feasibility-examples/blob/main/parsons/swap1-order-CW.peml

title: Swap1_execute
external_id: Swap1_execute
is_public: true
experience: 40
language_list: Java

author: Cliff Shaffer
license.id: MIT
license.owner: Cliff Shaffer

tags.topics: PEML Demo Parsons Problem: Swap
tags.style: coding problem

instructions:----------
Write a function to swap two elements in the array by reordering the
lines. Your function should return the array.
----------

[systems]
language: Java

[assets.code.wrapper.files]
content:----------
public class Answer
{
    ___
}
----------

[assets.code.starter.files]
content:----------
public int[] Swap(int[] arr, int i, int j)
{
   ___
}
----------

[assets.test.files]
format: text/csv-unquoted
template:
  int[] values = {{arr}};
  subject.Swap(values, {{i}}, {{j}});
  AssertEquals({{expected}}, values);
content:----------
arr,i,j,expected,description
new int[]{1, 2, 3, 4}, 2, 3, new int[]{1,2,4,3},example
new int[]{1, 2, 3, 4}, 0, 3, new int[]{4,2,3,1},hidden
----------
