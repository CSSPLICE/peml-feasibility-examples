# Simple swap function assessed by the order of the blocks.
# Technically this is a Java exercise, but this is a moot point
# because the assessment is by block order.
# No indentation is required.
# Illustrates fixed code shown to students.
# Illustrates a multi-line block.
# Illustrates two forms of distractor. One is a "pick-one" distractor
# where the user must pick exactly one of a group of blocks (many
# systems will give visual signaling that these are grouped).
# The other is a block that cannot appear in the answer.

exercise_id: https://github.com/CSSPLICE/peml-feasibility-examples/blob/main/parsons/swap1-order.peml

title: Swap1 - order
author: Cliff Shaffer
license.id: MIT
license.owner: Cliff Shaffer

tags.topics: PEML Demo Parsons Problem
tags.style: parsons, order

instructions:----------
Write a function to swap two array elements by reordering the lines.
----------

[assets.code.starter.files]
[.content]
blockid: fixed
display:----------
public static void Swap(int[] arr, int i, int j)
{
----------

blockid: group1
[.pickone]
blockid: one
display: int temp = arr[i];

blockid: onea
display: int temp = arr[j];
[]

blockid: two
display: arr[i] = arr[j];

blockid: three
display: arr[j] = temp;

blockid: four
display: int temp = arr[j];

blockid: fixed
display: }
[]
[]

# The dependency for blocks "onea" and "four" are -1, meaning
# that they are distractors and should not appear in the solution.
[assets.test.files]
content:----------
one:
onea: -1
two: one
three: two
four: -1
----------
[]
