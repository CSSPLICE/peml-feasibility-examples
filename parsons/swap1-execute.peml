# Simple swap function assessed by execution.
# This is a Java exercise.
# No indentation is required.
# Illustrates fixed code shown to students
# Illustrates a multi-line block
# Illustrates a simple distractor. Note that it is not marked in any
# mandatory way (a comment is provided to identify it, but this does
# not affect the exercise). Actually, the distractor block is
# indistinguishable from another block, but it doesn't matter which
# one is actually used.

exercise_id: https://github.com/CSSPLICE/peml-feasibility-examples/blob/main/parsons/swap1-order.peml

title: Swap1 - execute
author: Cliff Shaffer
license.id: MIT
license.owner: Cliff Shaffer

tags.topics: PEML Demo Parsons Problem
tags.style: parsons, noindent, java, execute

instructions:----------
Write a function to swap two elements in the array by reordering the
lines. Your function should return the array.
----------

[systems]
language: Java

[assets.code.wrapper.files]
content:----------
public class Answer {
    ___
}
----------

[assets.code.starter.files]
[.content]
tag: fixed
display:----------
public int[] Swap(int[] arr, int i, int j)
{
----------

tag: one
    display: int temp = arr[i];

# This happens to be a distractor, but it could actually be used
# in place of block "one" just fine. There is nothing special about
# the marking of a distractor block in a problem evaluated by
# execution.
tag: onea
    display: int temp = arr[i];

tag: two
    display: arr[i] = arr[j];

tag: three
    display: arr[j] = temp;

tag: four
    display: int temp = arr[j];

tag: fixed
display:----------
    return arr;
}
----------
[]

[assets.test.files]
format: text/csv-unquoted
template:
  int[] values = {{arr}};
  subject.Swap(values, {{i}}, {{j});
  AssertEquals({{expected}}, values);
content:----------
arr,i,j,expected,description
"new int[]{1, 2, 3, 4}", 2, 3, "new int[]{1,2,4,3}",example
"new int[]{1, 2, 3, 4}", 0, 3, "new int[]{4,2,3,1}",hidden
----------
